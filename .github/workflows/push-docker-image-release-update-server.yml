name: Build, Push, and Deploy on Release

on:
  release:
    types: [published]

env:
  DOCKER_HUB_REPOSITORY: tcnichol/test

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract release version
        id: release-version
        run: |
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_HUB_REPOSITORY }}:latest
            ${{ env.DOCKER_HUB_REPOSITORY }}:${{ steps.release-version.outputs.version }}

    outputs:
      release-version: ${{ steps.release-version.outputs.version }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Update and restart Docker services
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          COMPOSE_DIR: ${{ secrets.DOCKER_COMPOSE_DIR }}
          NEW_RELEASE: ${{ needs.build-and-push.outputs.release-version }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd $COMPOSE_DIR && \
            sed -i 's/VERSION_NUMBER=.*/VERSION_NUMBER=$NEW_RELEASE/' .env && \
            docker compose pull && \
            docker compose up -d
          "